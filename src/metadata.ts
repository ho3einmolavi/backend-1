/* eslint-disable */
export default async () => {
    const t = {
        ["./users/models/user.model"]: await import("./users/models/user.model")
    };
    return { "@nestjs/swagger/plugin": { "models": [], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "getHelloName": { type: String } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }], [import("./package/models/package.model"), { "Package": { traffic: {}, expirationDays: {}, price: {}, userCount: {} } }], [import("./telegram/models/telegramUser.model"), { "TelegramUser": { id: {}, firstname: { nullable: true }, lastname: { nullable: true }, phone: { nullable: true }, username: { nullable: true }, bigAvatar: { nullable: true }, smallAvatar: { nullable: true } } }], [import("./users/models/user.model"), { "ParentTelegram": { username: { nullable: true } }, "BankCard": { name: {}, number: {} }, "UserGift": { giftPackage: { nullable: true }, isGiftUsed: {} }, "Parent": { id: {}, telegram: { nullable: true }, bankCard: { nullable: true } }, "User": { phone: {}, firstname: {}, lastname: {}, role: {}, balance: {}, profitBalance: {}, totalProfit: {}, parentId: { nullable: true }, referId: { nullable: true }, isDisabled: { nullable: true }, isParentDisabled: { nullable: true }, telegram: { nullable: true }, parent: { nullable: true }, maxRechargeDiscountPercent: { nullable: true }, bankCard: { nullable: true }, profitPercent: {}, initialDiscountPercent: { nullable: true }, appliedDiscountPercent: { nullable: true }, userGift: { nullable: true } }, "Child": { activePackages: {}, lastConnectedAt: { nullable: true } } }], [import("./xui/dto/getClientStatsFilters.input"), { "GetClientStatsFiltersInput": { id: {} } }], [import("./xui/models/clientStat.model"), { "ClientStat": { total: {}, up: {}, down: {}, email: {}, enable: {}, expiryTime: {} } }], [import("./users/dto/change-password.input"), { "ChangePasswordInput": { oldPassword: {}, newPassword: {} } }], [import("./users/dto/update-user.input"), { "UpdateUserInput": { firstname: { nullable: true }, lastname: { nullable: true }, phone: { nullable: true }, password: { nullable: true }, cardBandNumber: { nullable: true }, cardBandName: { nullable: true } } }], [import("./users/dto/updateChild.input"), { "UpdateChildInput": { childId: {}, firstname: { nullable: true }, lastname: { nullable: true }, phone: { nullable: true }, password: { nullable: true }, isDisabled: { nullable: true }, role: { nullable: true } } }], [import("./auth/dto/signup.input"), { "SignupInput": { firstname: {}, lastname: {}, phone: {}, password: {}, promoCode: { nullable: true } } }], [import("./auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./auth/models/login.model"), { "LoginData": { tokens: {}, user: {} }, "Login": { loggedIn: { nullable: true }, isPromoCodeValid: { nullable: true } } }], [import("./arvan/dto/createArvanAccount.input"), { "CreateArvanAccountInput": { email: {}, password: {} } }], [import("./arvan/dto/domainsFilters.input"), { "DomainsFiltersInput": { domain: { nullable: true }, nsState: { nullable: true }, arvanSslState: { nullable: true }, letsEncryptSsl: { nullable: true } } }], [import("./arvan/models/arvan.model"), { "Arvan": { email: {}, password: {}, nsKeys: {}, token: { nullable: true }, tokenExpiredAt: { nullable: true } } }], [import("./arvan/models/dns.model"), { "Dns": { id: {}, type: {}, name: {}, ttl: {}, cloud: {}, value: {}, upstream_https: {} } }], [import("./arvan/models/domain.model"), { "Domain": { domain: {}, expiredAt: {}, nsState: {}, arvanSslState: {}, letsEncryptSsl: {} } }], [import("./arvan/dto/createDomain.input"), { "CreateDomainInput": { domain: {}, arvanAccount: {}, serverDomain: {}, expiredAt: { nullable: true } } }], [import("./arvan/dto/updateDnsIp.input"), { "UpdateDnsIpInput": { domain: {}, ip: {} } }], [import("./arvan/dto/updateDnsPort.input"), { "UpdateDnsPortInput": { domain: {}, port: {} } }], [import("./payment/dto/buyRechargePackage.input"), { "BuyRechargePackageInput": { rechargePackageId: {}, receipt: {} } }], [import("./payment/dto/enterCost.input"), { "EnterCostInput": { amount: {}, type: {}, description: { nullable: true } } }], [import("./payment/models/rechargePackage.model"), { "RechargePackage": { amount: {}, discountPercent: {} } }], [import("./minio/minio.model"), { "Media": { id: {}, url: {}, file_path: {}, file_format: {}, max_width: { nullable: true }, created_by: {}, upd_by: {}, creation: {}, last_upd: {} }, "File": { id: {}, url: {}, file_path: {}, file_format: {}, file_name: {}, created_by: {}, upd_by: {}, creation: {}, last_upd: {} } }], [import("./payment/dto/purchasePaymentRequest.input"), { "PurchasePaymentRequestInput": { id: { nullable: true }, amount: {}, receipt: { nullable: true } } }], [import("./payment/dto/rechargePaymentRequest.input"), { "RechargePaymentRequestInput": { id: { nullable: true }, amount: {}, profitAmount: { nullable: true }, receipt: { nullable: true } } }], [import("./auth/dto/login.input"), { "LoginInput": { phone: {}, password: {} } }], [import("./auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./auth/models/auth.model"), { "Auth": { user: { type: () => t["./users/models/user.model"].User } } }], [import("./minio/dto/uploadFile.input"), { "UploadInput": { image: {} } }], [import("./server/dto/createServer.input"), { "CreateServerInput": { ip: {}, domain: {}, type: {}, inboundId: {} } }], [import("./server/dto/issueCert.input"), { "IssueCertInput": { domain: {} } }], [import("./server/models/server.model"), { "Server": { domain: {}, ip: {}, type: {}, token: {}, inboundId: {} } }], [import("./package/dto/buyPackage.input"), { "BuyPackageInput": { packageId: {}, name: { nullable: true }, receipt: { nullable: true } } }], [import("./package/dto/renewPackage.input"), { "RenewPackageInput": { packageId: {}, userPackageId: { nullable: true }, receipt: { nullable: true } } }], [import("./package/models/userPackage.model"), { "UserPackage": { name: {}, link: {}, remainingTraffic: {}, totalTraffic: {}, expiryTime: {}, lastConnectedAt: { nullable: true } } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./payment/models/payment.model"), { "Payment": { amount: {} } }]] } };
};